{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    productCart: [],\n    totalAmount: 0\n  },\n  reducers: {\n    addCart(state, action) {\n      const newProduct = action.payload;\n      const ixdExistingCart = state.productCart.findIndex(item => item.id === newProduct.id);\n\n      if (ixdExistingCart !== -1) {\n        state.productCart[ixdExistingCart].quality++;\n      } else {\n        state.productCart.push({ ...newProduct,\n          quality: 1\n        });\n      }\n\n      state.totalAmount += newProduct.price;\n    },\n\n    deleteCart(state, action) {\n      const idRemoveProduct = state.productCart.findIndex(item => item.id === action.payload);\n      state.totalAmount -= state.productCart[idRemoveProduct].price * state.productCart[idRemoveProduct].quality;\n      state.productCart = state.productCart.filter(item => item.id !== action.payload);\n    }\n\n  }\n});\nexport const actionsCart = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/dangphuongnamnguyen/Desktop/DA_2/akyo_shop/src/store/cartSlice.js"],"names":["createSlice","cartSlice","name","initialState","productCart","totalAmount","reducers","addCart","state","action","newProduct","payload","ixdExistingCart","findIndex","item","id","quality","push","price","deleteCart","idRemoveProduct","filter","actionsCart","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,EADD;AAEZC,IAAAA,WAAW,EAAE;AAFD,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMC,UAAU,GAAGD,MAAM,CAACE,OAA1B;AACA,YAAMC,eAAe,GAAGJ,KAAK,CAACJ,WAAN,CAAkBS,SAAlB,CACrBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,UAAU,CAACK,EADX,CAAxB;;AAIA,UAAIH,eAAe,KAAK,CAAC,CAAzB,EAA4B;AAC1BJ,QAAAA,KAAK,CAACJ,WAAN,CAAkBQ,eAAlB,EAAmCI,OAAnC;AACD,OAFD,MAEO;AACLR,QAAAA,KAAK,CAACJ,WAAN,CAAkBa,IAAlB,CAAuB,EACrB,GAAGP,UADkB;AAErBM,UAAAA,OAAO,EAAE;AAFY,SAAvB;AAID;;AACDR,MAAAA,KAAK,CAACH,WAAN,IAAqBK,UAAU,CAACQ,KAAhC;AACD,KAhBO;;AAiBRC,IAAAA,UAAU,CAACX,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMW,eAAe,GAAGZ,KAAK,CAACJ,WAAN,CAAkBS,SAAlB,CACrBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OADP,CAAxB;AAIAH,MAAAA,KAAK,CAACH,WAAN,IACEG,KAAK,CAACJ,WAAN,CAAkBgB,eAAlB,EAAmCF,KAAnC,GACAV,KAAK,CAACJ,WAAN,CAAkBgB,eAAlB,EAAmCJ,OAFrC;AAIAR,MAAAA,KAAK,CAACJ,WAAN,GAAoBI,KAAK,CAACJ,WAAN,CAAkBiB,MAAlB,CACjBP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OADX,CAApB;AAGD;;AA7BO;AANkB,CAAD,CAA7B;AAuCA,OAAO,MAAMW,WAAW,GAAGrB,SAAS,CAACsB,OAA9B;AACP,eAAetB,SAAS,CAACuB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    productCart: [],\n    totalAmount: 0,\n  },\n  reducers: {\n    addCart(state, action) {\n      const newProduct = action.payload;\n      const ixdExistingCart = state.productCart.findIndex(\n        (item) => item.id === newProduct.id\n      );\n\n      if (ixdExistingCart !== -1) {\n        state.productCart[ixdExistingCart].quality++;\n      } else {\n        state.productCart.push({\n          ...newProduct,\n          quality: 1,\n        });\n      }\n      state.totalAmount += newProduct.price;\n    },\n    deleteCart(state, action) {\n      const idRemoveProduct = state.productCart.findIndex(\n        (item) => item.id === action.payload\n      );\n\n      state.totalAmount -=\n        state.productCart[idRemoveProduct].price *\n        state.productCart[idRemoveProduct].quality;\n\n      state.productCart = state.productCart.filter(\n        (item) => item.id !== action.payload\n      );\n    },\n  },\n});\n\nexport const actionsCart = cartSlice.actions;\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}